{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let PiecesCatalogService = /*#__PURE__*/(() => {\n  class PiecesCatalogService {\n    constructor() {\n      this.allPuzzlePieces = new Array(4);\n    }\n    getPiecesForSelectedPattern(pattern) {\n      if (pattern === 'atlantis') {\n        this.setPiecesToAtlantis();\n      } else if (pattern === 'egypt') {\n        this.setPiecesToEgypt();\n      } else {\n        this.setPiecesToPlanets();\n      }\n      return this.makeDeepCopy();\n    }\n    makeDeepCopy() {\n      let cleanPuzzlePieces = new Array(4);\n      cleanPuzzlePieces[0] = [...this.allPuzzlePieces[0]];\n      //layer zero is array of primitives so no references and no need to use spread\n      for (let i = 1; i < 4; i++) {\n        cleanPuzzlePieces[i] = [];\n        for (let j = 0; j < this.allPuzzlePieces[i].length; j++) {\n          cleanPuzzlePieces[i][j] = Object.assign({}, this.allPuzzlePieces[i][j]);\n        }\n      }\n      return cleanPuzzlePieces;\n    }\n    setPiecesToPlanets() {\n      this.allPuzzlePieces[0] = ['G', 'G', 'G', 'P', 'P', 'P', 'G', 'G', 'P', 'P'];\n      this.allPuzzlePieces[1] = [{\n        top: 'G',\n        left: 'P',\n        right: 'O',\n        id: 0\n      }, {\n        top: 'G',\n        left: 'G',\n        right: 'P',\n        id: 1\n      }, {\n        top: 'G',\n        left: 'O',\n        right: 'G',\n        id: 2\n      }, {\n        top: 'G',\n        left: 'P',\n        right: 'P',\n        id: 3\n      }, {\n        top: 'G',\n        left: 'O',\n        right: 'O',\n        id: 4\n      }, {\n        top: 'P',\n        left: 'P',\n        right: 'O',\n        id: 5\n      }, {\n        top: 'P',\n        left: 'O',\n        right: 'P',\n        id: 6\n      }, {\n        top: 'P',\n        left: 'G',\n        right: 'P',\n        id: 7\n      }, {\n        top: 'P',\n        left: 'O',\n        right: 'G',\n        id: 8\n      }, {\n        top: 'P',\n        left: 'G',\n        right: 'G',\n        id: 9\n      }];\n      this.allPuzzlePieces[2] = [{\n        left: 'G',\n        right: 'P',\n        bottom: 'O',\n        id: 0\n      }, {\n        left: 'O',\n        right: 'G',\n        bottom: 'P',\n        id: 1\n      }, {\n        left: 'P',\n        right: 'O',\n        bottom: 'P',\n        id: 2\n      }, {\n        left: 'O',\n        right: 'P',\n        bottom: 'G',\n        id: 3\n      }, {\n        left: 'G',\n        right: 'O',\n        bottom: 'O',\n        id: 4\n      }, {\n        left: 'P',\n        right: 'G',\n        bottom: 'G',\n        id: 5\n      }, {\n        left: 'P',\n        right: 'O',\n        bottom: 'G',\n        id: 6\n      }, {\n        left: 'O',\n        right: 'O',\n        bottom: 'P',\n        id: 7\n      }, {\n        left: 'P',\n        right: 'P',\n        bottom: 'G',\n        id: 8\n      }, {\n        left: 'G',\n        right: 'G',\n        bottom: 'O',\n        id: 9\n      }];\n      this.allPuzzlePieces[3] = [{\n        left: 'P',\n        right: 'G',\n        id: 0\n      }, {\n        left: 'O',\n        right: 'G',\n        id: 1\n      }, {\n        left: 'G',\n        right: 'P',\n        id: 2\n      }, {\n        left: 'G',\n        right: 'O',\n        id: 3\n      }, {\n        left: 'O',\n        right: 'P',\n        id: 4\n      }];\n    }\n    setPiecesToEgypt() {\n      this.allPuzzlePieces[0] = ['T', 'T', 'P', 'R', 'R', 'T', 'P', 'T', 'R', 'P'];\n      this.allPuzzlePieces[1] = [{\n        top: 'T',\n        left: 'O',\n        right: 'T',\n        id: 0\n      }, {\n        top: 'T',\n        left: 'P',\n        right: 'O',\n        id: 1\n      }, {\n        top: 'P',\n        left: 'O',\n        right: 'T',\n        id: 2\n      }, {\n        top: 'R',\n        left: 'P',\n        right: 'P',\n        id: 3\n      }, {\n        top: 'R',\n        left: 'T',\n        right: 'T',\n        id: 4\n      }, {\n        top: 'T',\n        left: 'O',\n        right: 'O',\n        id: 5\n      }, {\n        top: 'P',\n        left: 'P',\n        right: 'T',\n        id: 6\n      }, {\n        top: 'T',\n        left: 'T',\n        right: 'P',\n        id: 7\n      }, {\n        top: 'R',\n        left: 'P',\n        right: 'O',\n        id: 8\n      }, {\n        top: 'P',\n        left: 'T',\n        right: 'P',\n        id: 9\n      }];\n      this.allPuzzlePieces[2] = [{\n        left: 'P',\n        right: 'O',\n        bottom: 'T',\n        id: 0\n      }, {\n        left: 'T',\n        right: 'P',\n        bottom: 'R',\n        id: 1\n      }, {\n        left: 'O',\n        right: 'O',\n        bottom: 'P',\n        id: 2\n      }, {\n        left: 'T',\n        right: 'P',\n        bottom: 'T',\n        id: 3\n      }, {\n        left: 'P',\n        right: 'T',\n        bottom: 'R',\n        id: 4\n      }, {\n        left: 'T',\n        right: 'O',\n        bottom: 'R',\n        id: 5\n      }, {\n        left: 'O',\n        right: 'P',\n        bottom: 'P',\n        id: 6\n      }, {\n        left: 'T',\n        right: 'T',\n        bottom: 'R',\n        id: 7\n      }, {\n        left: 'P',\n        right: 'P',\n        bottom: 'T',\n        id: 8\n      }, {\n        left: 'O',\n        right: 'T',\n        bottom: 'P',\n        id: 9\n      }];\n      this.allPuzzlePieces[3] = [{\n        left: 'P',\n        right: 'R',\n        id: 0\n      }, {\n        left: 'T',\n        right: 'R',\n        id: 1\n      }, {\n        left: 'R',\n        right: 'P',\n        id: 2\n      }, {\n        left: 'R',\n        right: 'T',\n        id: 3\n      }, {\n        left: 'P',\n        right: 'T',\n        id: 4\n      }];\n    }\n    setPiecesToAtlantis() {\n      this.allPuzzlePieces[0] = ['B', 'B', 'AU', 'S', 'S', 'B', 'AU', 'B', 'S', 'AU'];\n      this.allPuzzlePieces[1] = [{\n        top: 'B',\n        left: 'S',\n        right: 'C',\n        id: 0\n      }, {\n        top: 'B',\n        left: 'C',\n        right: 'B',\n        id: 1\n      }, {\n        top: 'AU',\n        left: 'B',\n        right: 'S',\n        id: 2\n      }, {\n        top: 'S',\n        left: 'B',\n        right: 'B',\n        id: 3\n      }, {\n        top: 'S',\n        left: 'S',\n        right: 'C',\n        id: 4\n      }, {\n        top: 'B',\n        left: 'B',\n        right: 'S',\n        id: 5\n      }, {\n        top: 'AU',\n        left: 'S',\n        right: 'B',\n        id: 6\n      }, {\n        top: 'B',\n        left: 'C',\n        right: 'C',\n        id: 7\n      }, {\n        top: 'S',\n        left: 'S',\n        right: 'S',\n        id: 8\n      }, {\n        top: 'AU',\n        left: 'C',\n        right: 'B',\n        id: 9\n      }];\n      this.allPuzzlePieces[2] = [{\n        left: 'S',\n        right: 'B',\n        bottom: 'AU',\n        id: 0\n      }, {\n        left: 'B',\n        right: 'S',\n        bottom: 'C',\n        id: 1\n      }, {\n        left: 'C',\n        right: 'B',\n        bottom: 'B',\n        id: 2\n      }, {\n        left: 'S',\n        right: 'S',\n        bottom: 'C',\n        id: 3\n      }, {\n        left: 'B',\n        right: 'C',\n        bottom: 'AU',\n        id: 4\n      }, {\n        left: 'C',\n        right: 'S',\n        bottom: 'B',\n        id: 5\n      }, {\n        left: 'S',\n        right: 'C',\n        bottom: 'C',\n        id: 6\n      }, {\n        left: 'B',\n        right: 'S',\n        bottom: 'AU',\n        id: 7\n      }, {\n        left: 'C',\n        right: 'C',\n        bottom: 'B',\n        id: 8\n      }, {\n        left: 'B',\n        right: 'B',\n        bottom: 'AU',\n        id: 9\n      }];\n      this.allPuzzlePieces[3] = [{\n        left: 'AU',\n        right: 'C',\n        id: 0\n      }, {\n        left: 'B',\n        right: 'C',\n        id: 1\n      }, {\n        left: 'AU',\n        right: 'B',\n        id: 2\n      }, {\n        left: 'C',\n        right: 'AU',\n        id: 3\n      }, {\n        left: 'B',\n        right: 'AU',\n        id: 4\n      }];\n    }\n  }\n  PiecesCatalogService.ɵfac = function PiecesCatalogService_Factory(t) {\n    return new (t || PiecesCatalogService)();\n  };\n  PiecesCatalogService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PiecesCatalogService,\n    factory: PiecesCatalogService.ɵfac,\n    providedIn: 'root'\n  });\n  return PiecesCatalogService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}